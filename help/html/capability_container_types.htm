<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<!-- saved from url=(0029)http://www.helpandmanual.com/ -->
<head>
   <title>Capability Container Types</title>
   <meta name="generator" content="Help &amp; Manual" />
   <meta name="keywords" content="" />
   <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
   <meta http-equiv="Content-Style-Type" content="text/css" />
   <link type="text/css" href="default.css" rel="stylesheet" />
<script type="text/javascript" src="helpman_topicinit.js"></script>
<!-- Redirect browser to frame page if page is not in the content frame. -->
<script type="text/javascript">
<!--
if (location.search.lastIndexOf("toc=0")<=0) {
  if (parent.frames.length==0) { parent.location.href="index.html?capability_container_types.htm"; }
  else { parent.quicksync('a3.1.7.1'); }
}
//-->
</script>
<script type="text/javascript" src="highlight.js"></script></head>
<body style="margin: 0px 0px 0px 0px; background: #FFFFFF;" onload="highlight();">
<div id="hmpopupDiv" style="visibility:hidden; position:absolute; z-index:1000; "></div>


<table width="100%" border="0" cellspacing="0" cellpadding="5" bgcolor="#D0D0D0">
  <tr valign="middle">
    <td align="left">
      <p><span class="f_Heading1">Capability Container Types</span></p>

    </td>
    <td align="right">
     <span style="font-size: 9pt">
     <a href="overview.htm">Top</a>&nbsp;
     <a href="overview_of_device_capabilitie.htm">Previous</a>&nbsp;
     <a href="settingdevicecapabilities.htm">Next</a>
     </span>
    </td>
  </tr>
</table>


<!-- Placeholder for topic body. -->
<table width="100%" border="0" cellspacing="0" cellpadding="5"><tr valign="top"><td align="left">
<p>Since capability values can be of differing types (strings, integers, floating point values, etc.) &nbsp;and can be stored in different <span style="font-weight: bold; text-decoration: underline;">containers</span> (single values, arrays of values, etc.), the application must be familiar with how DTWAIN handles such differing value types and structures when setting or getting capability values.</p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p>For each device capability, the TWAIN specification states that setting data into or getting data from the Source requires that the data reside in a certain container (or in other words, data structure). &nbsp;The data structure describes whether the capability values are single values, arrays of values or range definitions. &nbsp; &nbsp;The names that TWAIN uses for these structures are TW_ONEVALUE, TW_RANGE, TW_ARRAY, and TW_ENUMERATION.  </p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p>With DTWAIN, the actual TWAIN data structure is not used explicitly by the application. &nbsp;So the question is: &nbsp;how does DTWAIN handle these variant types when it is time to describe the structure for the capability values? &nbsp;The answer is using a universal data structure called a <a href="overview_of_dtwain_arrays.htm">DTWAIN_ARRAY</a>.  </p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p>When the application needs to set or retrieve capability values from the Source, the application needs to either store the values within the DTWAIN_ARRAY or retrieve the values from a DTWAIN_ARRAY, respectively. &nbsp;This makes setting or retrieving the capability values a trivial task, since knowledge of the actual TWAIN data structure is not necessary. &nbsp; However, the application <span style="font-weight: bold; text-decoration: underline;">must</span> know the data type that the capability supports. &nbsp;For example, integers, floating point numbers, strings, etc. &nbsp;The data types for the different capabilities can be found <a href="dtwain_capabilities_by_name.htm">here</a>.</p>

</td></tr></table>

</body>
</html>
