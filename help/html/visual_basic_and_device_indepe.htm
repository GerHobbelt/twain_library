<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<!-- saved from url=(0029)http://www.helpandmanual.com/ -->
<head>
   <title>Visual Basic and Device Independent Bitmaps</title>
   <meta name="generator" content="Help &amp; Manual" />
   <meta name="keywords" content="Visual Basic and handling Device Independent Bitmaps" />
   <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
   <meta http-equiv="Content-Style-Type" content="text/css" />
   <link type="text/css" href="default.css" rel="stylesheet" />
<script type="text/javascript" src="helpman_topicinit.js"></script>
<!-- Redirect browser to frame page if page is not in the content frame. -->
<script type="text/javascript">
<!--
if (location.search.lastIndexOf("toc=0")<=0) {
  if (parent.frames.length==0) { parent.location.href="index.html?visual_basic_and_device_indepe.htm"; }
  else { parent.quicksync('a2.3.5'); }
}
//-->
</script>
<script type="text/javascript" src="highlight.js"></script></head>
<body style="margin: 0px 0px 0px 0px; background: #FFFFFF;" onload="highlight();">
<div id="hmpopupDiv" style="visibility:hidden; position:absolute; z-index:1000; "></div>


<table width="100%" border="0" cellspacing="0" cellpadding="5" bgcolor="#D0D0D0">
  <tr valign="middle">
    <td align="left">
      <p><span class="f_Heading1">Visual Basic and Device Independent Bitmaps</span></p>

    </td>
    <td align="right">
     <span style="font-size: 9pt">
     <a href="overview.htm">Top</a>&nbsp;
     <a href="visual_basic_and_null_pointers.htm">Previous</a>&nbsp;
     <a href="visual_basic_and_modal___model.htm">Next</a>
     </span>
    </td>
  </tr>
</table>


<!-- Placeholder for topic body. -->
<table width="100%" border="0" cellspacing="0" cellpadding="5"><tr valign="top"><td align="left">
<p>In the installation directory are small samples of using DTWAIN within a Visual Basic application. &nbsp;Most of these examples illustrate the basic DTWAIN functions, and use the clipboard to transfer the image to a VB image object. &nbsp;Since TWAIN works with <a href="indmp4l.htm">Device Independent Bitmaps</a> (DIBs) extensively, the Visual Basic programmer should be familiar with handling DIBs within a VB application.  </p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p>Most of the examples use the Windows API clipboard functions to save the acquired DIB to the clipboard. &nbsp;Since a DIB is actually a LONG variable and not a true VB object, it is easier to use the API to handle saving to the clipboard. &nbsp;Once the data is saved to the clipboard, the VB clipboard object <span style="font-weight: bold;">GetData</span> method using the <span style="font-weight: bold;">vbCFDIB</span> format can be used to transfer the DIB to an image or picture object.</p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p>An alternative is to use the <a href="dtwain_acquiretoclipboard.htm">DTWAIN_AcquireToClipboard</a> function. &nbsp;This automates placing the DIB in the clipboard, and all that is necessary for the VB app is to call Clipboard.GetData using the vbCFDIB format.</p>
<p><span style="color: #000000;">&nbsp;</span></p>
<p>Consult the VB documentation for more information on handling DIBs using the Clipboard object. &nbsp;Also investigate using a third-party library (or develop your own code) that handles DIB's directly without using the clipboard as an intermediate object. </p>

</td></tr></table>

</body>
</html>
