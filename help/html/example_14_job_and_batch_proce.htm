<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<!-- saved from url=(0029)http://www.helpandmanual.com/ -->
<head>
   <title>Example 14: Job and Batch Processnig</title>
   <meta name="generator" content="Help &amp; Manual" />
   <meta name="keywords" content="" />
   <meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
   <meta http-equiv="Content-Style-Type" content="text/css" />
   <link type="text/css" href="default.css" rel="stylesheet" />
<script type="text/javascript" src="helpman_topicinit.js"></script>
<!-- Redirect browser to frame page if page is not in the content frame. -->
<script type="text/javascript">
<!--
if (location.search.lastIndexOf("toc=0")<=0) {
  if (parent.frames.length==0) { parent.location.href="index.html?example_14_job_and_batch_proce.htm"; }
  else { parent.quicksync('a9.5.14'); }
}
//-->
</script>
<script type="text/javascript" src="highlight.js"></script></head>
<body style="margin: 0px 0px 0px 0px; background: #FFFFFF;" onload="highlight();">
<div id="hmpopupDiv" style="visibility:hidden; position:absolute; z-index:1000; "></div>


<table width="100%" border="0" cellspacing="0" cellpadding="5" bgcolor="#D0D0D0">
  <tr valign="middle">
    <td align="left">
      <p class="p_Heading1"><span class="f_Heading1">Example 14: Job and Batch Processnig</span></p>

    </td>
    <td align="right">
     <span style="font-size: 9pt">
     <a href="overview.htm">Top</a>&nbsp;
     <a href="example13highspeedscannin_2.htm">Previous</a>&nbsp;
     <a href="example_15_duplex_scanning.htm">Next</a>
     </span>
    </td>
  </tr>
</table>


<!-- Placeholder for topic body. -->
<table width="100%" border="0" cellspacing="0" cellpadding="5"><tr valign="top"><td align="left">
<p><span style="font-weight: bold;">Example: &nbsp;Acquire images using device that supports job control and batch processing.</span></p>
<p>&nbsp;</p>
<p>&nbsp;</p>
<p>#include "cdtwain.h" &nbsp;// CDTwain</p>
<p>#include &lt;iostream&gt;</p>
<p>#include &lt;algorithm&gt; &nbsp;// for std::find</p>
<p>&nbsp;</p>
<p>using namespace DTWAIN;</p>
<p>using namespace std; // for &lt;iostream&gt; </p>
<p>&nbsp;</p>
<p>int main( )</p>
<p>{</p>
<p> &nbsp; // Initialize DTWAIN - return if initialization does not work</p>
<p> &nbsp; DTwainInterface TI;</p>
<p> &nbsp; if ( !TI.IsValid( ) ) </p>
<p> &nbsp; &nbsp; &nbsp; return 0;</p>
<p>&nbsp;</p>
<p> &nbsp; // Declare a Source and assign the TWAIN source to it</p>
<p> &nbsp; DTwainSource Source = DTwainSource::Select( );</p>
<p> &nbsp; if ( !Source.IsValid( ) )</p>
<p> &nbsp; &nbsp; &nbsp;return 0;</p>
<p>&nbsp;</p>
<p> &nbsp;if ( !Source.IsJobControlSupported( ) )</p>
<p> &nbsp;{</p>
<p> &nbsp; &nbsp; cout &lt;&lt; "Device does not support job control. &nbsp;Exiting";</p>
<p> &nbsp; &nbsp; return 0;</p>
<p> &nbsp;}</p>
<p>&nbsp;</p>
<p> &nbsp;// get all of the supported job control types</p>
<p> &nbsp;DTwainLongArray AllJobControls;</p>
<p> &nbsp;Source.EnumJobControls( AllJobControls );</p>
<p>&nbsp;</p>
<p> &nbsp;// we would like to exclude the job separator page when scanning. &nbsp;Check if it's in the list of supported types</p>
<p> &nbsp;if ( find(AllJobControls.begin( ), AllJobControls.end( ), DTWAIN_JC_JSXC ) != AllJobControls.end( ) )</p>
<p> &nbsp; &nbsp; Source.SetJobControl( DTWAIN_JC_JSXC );</p>
<p> &nbsp;else</p>
<p> &nbsp;// include the job separator page.</p>
<p> &nbsp;if ( find(AllJobControls.begin( ), AllJobControls.end( ), DTWAIN_JC_JSXC ) != AllJobControls.end( ) )</p>
<p> &nbsp; &nbsp; Source.SetJobControl( DTWAIN_JC_JSIC );</p>
<p> &nbsp;else</p>
<p> &nbsp;{</p>
<p> &nbsp; &nbsp; &nbsp; cout &lt;&lt; "Could not find appropriate job control type";</p>
<p> &nbsp; &nbsp; &nbsp; return 0;</p>
<p> &nbsp;}</p>
<p>&nbsp;</p>
<p> &nbsp;// Acquire to a multipage Group 4 TIFF file. &nbsp;Base file name is JOB0000</p>
<p> &nbsp;DTwainAcquirer Acquirer(Source);</p>
<p> &nbsp;Acquirer.SetFileNumberIncrement( 1 ). &nbsp;// auto increment the number field in the base file name.</p>
<p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; SetUIMode( false ). &nbsp; // no user interface</p>
<p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; SetMultiPageFileMode( ). &nbsp;// scan to a multipage file, not individual files</p>
<p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; SetColorType(COLORTYPE_BW). &nbsp;// make sure pixel level is 1-bit (black/white) for group 4 TIFF files.</p>
<p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; EnableFeeder( true ). &nbsp; // enable the document feeder</p>
<p> &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; &nbsp; Acquire("JOB0000.TIF", FILETYPE_TIFFG4); // start the acquisition</p>
<p>}</p>
<p>&nbsp;</p>
<p>The code above will create multipage Group4-TIFF files called JOB0000.TIF, JOB0001.TIF, JOB0002.TIF, etc. that will contain the pages of each batch job that was acquired. &nbsp;The separator page determines the start of a new job. &nbsp;Note that the device must support job/batch processing using TWAIN. &nbsp; </p>

</td></tr></table>

</body>
</html>
