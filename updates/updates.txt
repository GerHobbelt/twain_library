DTWAIN Version changes

5.2.0.2		  
- Fixed DLL Version Information in the DLL resources.

- Fixed generation of multipage TIFF files if the compression used on pages will vary.  This fix required 
  patching the FreeImage source code. 

- Fixed DTWAIN_SetTiffCompressType to properly handle non-multipage and multipage TIFF types.

- Added function DTWAIN_SetDSMSearchOrderEx to allow applications to customize where DTWAIN will search for the 
  TWAIN Data Source Manager.  This differs from DTWAIN_SetDSMSearchOrder in that the Ex version will now allow
  searching in a custom directory.		  

- Added initial support for MSG_GETHELP, MSG_GETLABEL, and MSG_GETLABELENUM using DTWAIN_GetCapValues and related functions.
  Note that these messages were always available using the lower-level DTWAIN_CallDSM function, but now the library has made
  these messages available using the DTWAIN_GetCapValues function.

- Changed DTWAIN_IsFeederSupported to do a more thorough test to see if a feeder is supported instead of just checking
  for the feeder being enabled.

- Fixed issue with MSG_SETCONSTRAINT message not being recognized in call to DTWAIN_SetCapValues.

- Added DTWAIN_GetLastError() return code of -1050 to denote that Source selection has been cancelled from the TWAIN dialog.  
  Previously the cancellation was reported as an INVALID DTWAIN SOURCE.  This did not affect applications, since the 
  TWAIN Source is actually NULL if the TWAIN dialog is cancelled, but this additional code is added for clarity.

- DTWAIN Log now shows local time stamp intstead of UTC.
					   
- Other miscellaneous fixes


5.2.0.1
- Fix incorrect version number in DLL resources

- Add missing source file ctlacquireaudio.cpp to source build project


5.2.0.0
- Added support for audio file transfers using the TWAIN capability ACAP_AUDIOXFER.  
  New functions are DTWAIN_AcquireAudioNative, DTWAIN_AcquireAudioFile, DTWAIN_AcquireAudioFileA, DTWAIN_AcquireAudioFileW

- Fixed issue with multipage image files only saving the last page.


5.1.0.9
- Added DTWAIN_SetTwainDialogFont() to adjust font used in TWAIN Select Source dialog (only is available
  when calling DTWAIN_SelectSource2() function)  Usage:

	DTWAIN_SetTwainDialogFont(HFONT font)

  where HFONT is a handle to a Windows HFONT.  If font is 0, the default font (MS Sans Serif) is used.

- Added test for CAP_SHEETCOUNT to control the number of pages that will be acquired.

5.1.0.8
- Removed initial slow TWAIN capability retrieval and replaced with fast capability retrieval.
- Fixed issue with CAP_FEEDERLOADED being considered an unsupported capability for some TWAIN devices.
- Added additional language resource for Portuguese-Brazilian strings (thanks to user mauriciofaria).
- Visual Studio 2019 solution added (thanks to user Dcreeron).

5.1.0.7
- Fixed issue with program opting to discard the first page of a multi-page acquisition.

5.1.0.6
- Added custom code for TWAIN drivers that erroneously return TWRC_CANCEL when the user interface is closed.
- Updated search logic when attempting to find / load the TWAIN Data Source manager
- Added DTWAIN_GetLibraryPath function to return the path of the loaded DTWAIN Dll

5.1.0.5
- Minor source code changes.  Removed LPGL wording from source files.

5.1.0.4
- Fix for erroneous return code when multipage PCX (DCX) files after saved

5.1.0.3
- Add DTWAIN_...Ex() functions that return a DTWAIN_ARRAY.  These functions are simpler versions of the DTWAIN 
  functions that accept LPDTWAIN_ARRAY as a parameter.  This makes it simpler for languages such as Python and
  others that have issues with pointer arguments.  Thus instead of having to do something like this:

      DTWAIN_SOURCE Source;
      DTWAIN_ARRAY Array;
      //...
      DTWAIN_EnumOrientations(Source, &Array)...

The call can now be this:

      DTWAIN_SOURCE Source;
      //...
      DTWAIN_ARRAY array = DTWAIN_EnumOrientationsEx(Source);

Since DTWAIN_ARRAY is actually an integer (32-bit or 64-bit, depending on the program's bit-ness), the calling 
application can simply treat the DTWAIN_ARRAY as an integer type.

For functions that already have an Ex() at the end of the function name, an Ex2() version was created, for example,
     DTWAIN_EnumSupportedCapsEx2()
     
     
5.1.0.1
- Add all supported PDF page dimensions to twaininfo.txt.  This allows customization of the PDF creation with
  respect to the page sizing (you can add your own definitions).
- Update sources to output Visual C++ 2019 compilation messages.

5.1.0.0
- Update LibTiff to version 4.0.10
- Update LibPNG to version 1.6.37
- Now requires application to call DTWAIN_UseMultipleThreads if one DTWAIN session will be used across multiple threads.
- Speed up processing DTWAIN functions when using DTWAIN in a single thread.
